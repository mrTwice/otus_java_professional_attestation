server:
  port: 8080
spring:
  application:
    name: tt-oauth2-authorization-server
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5434/tt_oauth2_authorization_server?minimumIdle=2
    username: tt_oauth2_authorization_server_admin
    password: tt_oauth2_authorization_server_admin
    hikari:
      minimumIdle: 2
      maximumPoolSize: 4
  jpa:
    #show-sql: true
    open-in-view: false
    hibernate:
      ddl-auto: validate
  flyway:
    enabled: true
    locations: classpath:db/migration
jwk:
  encryption:
    secret: change-me-super-secret

auth-server:
  base-uri: http://localhost:8080

user-service:
  base-uri: http://localhost:9591
  auth:
    client-id: internal-service-client
    client-secret: internal-secret
    scopes:
      - user:view
      - user:manage
      - user:delete

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.security.oauth2.server.authorization.web.OAuth2AuthorizationEndpointFilter: DEBUG
    org.springframework.security.oauth2.server.authorization: DEBUG
